// <auto-generated />
using System;
using FinBotNet;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinBotFramework.Migrations
{
    [DbContext(typeof(BotContext))]
    partial class BotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("FinBotNet.AD", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("AD");
                });

            modelBuilder.Entity("FinBotNet.ADOSC", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FastPeriod")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<int>("SlowPeriod")
                        .HasColumnType("int");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("ADOSC");
                });

            modelBuilder.Entity("FinBotNet.ADX", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("ADX");
                });

            modelBuilder.Entity("FinBotNet.ADXR", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("ADXR");
                });

            modelBuilder.Entity("FinBotNet.APO", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FastPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaType")
                        .HasColumnType("int");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SlowPeriod")
                        .HasColumnType("int");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("APO");
                });

            modelBuilder.Entity("FinBotNet.AROON", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("AROON");
                });

            modelBuilder.Entity("FinBotNet.AROONOSC", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("AROONOSC");
                });

            modelBuilder.Entity("FinBotNet.ATR", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("ATR");
                });

            modelBuilder.Entity("FinBotNet.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FinBotNet.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StratId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("StratId");

                    b.ToTable("Agent");
                });

            modelBuilder.Entity("FinBotNet.BBANDS", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.Property<int>("matype")
                        .HasColumnType("int");

                    b.Property<int>("nbdevdn")
                        .HasColumnType("int");

                    b.Property<int>("nbdevup")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("BBANDS");
                });

            modelBuilder.Entity("FinBotNet.BOP", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("BOP");
                });

            modelBuilder.Entity("FinBotNet.CCI", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("CCI");
                });

            modelBuilder.Entity("FinBotNet.CMO", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("CMO");
                });

            modelBuilder.Entity("FinBotNet.DEMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("DEMA");
                });

            modelBuilder.Entity("FinBotNet.DX", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("DX");
                });

            modelBuilder.Entity("FinBotNet.EMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("EMA");
                });

            modelBuilder.Entity("FinBotNet.HT_DCPERIOD", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("HT_DCPERIOD");
                });

            modelBuilder.Entity("FinBotNet.HT_DCPHASE", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("HT_DCPHASE");
                });

            modelBuilder.Entity("FinBotNet.HT_PHASOR", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("HT_PHASOR");
                });

            modelBuilder.Entity("FinBotNet.HT_SINE", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("HT_SINE");
                });

            modelBuilder.Entity("FinBotNet.HT_TRENDLINE", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("HT_TRENDLINE");
                });

            modelBuilder.Entity("FinBotNet.HT_TRENDMODE", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("HT_TRENDMODE");
                });

            modelBuilder.Entity("FinBotNet.KAMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("KAMA");
                });

            modelBuilder.Entity("FinBotNet.MACD", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FastPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SignalPeriod")
                        .HasColumnType("int");

                    b.Property<int>("SlowPeriod")
                        .HasColumnType("int");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("MACD");
                });

            modelBuilder.Entity("FinBotNet.MACDEXT", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FastMaType")
                        .HasColumnType("int");

                    b.Property<int>("FastPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SignalMaType")
                        .HasColumnType("int");

                    b.Property<int>("SignalPeriod")
                        .HasColumnType("int");

                    b.Property<int>("SlowMaType")
                        .HasColumnType("int");

                    b.Property<int>("SlowPeriod")
                        .HasColumnType("int");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("MACDEXT");
                });

            modelBuilder.Entity("FinBotNet.MAMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("FastLimit")
                        .HasColumnType("real");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("SlowLimit")
                        .HasColumnType("real");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("MAMA");
                });

            modelBuilder.Entity("FinBotNet.MFI", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("MFI");
                });

            modelBuilder.Entity("FinBotNet.MIDPOINT", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("MIDPOINT");
                });

            modelBuilder.Entity("FinBotNet.MIDPRICE", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("MIDPRICE");
                });

            modelBuilder.Entity("FinBotNet.MINUS_DI", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("MINUS_DI");
                });

            modelBuilder.Entity("FinBotNet.MINUS_DM", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("MINUS_DM");
                });

            modelBuilder.Entity("FinBotNet.MOM", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("MOM");
                });

            modelBuilder.Entity("FinBotNet.NATR", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("NATR");
                });

            modelBuilder.Entity("FinBotNet.OBV", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("OBV");
                });

            modelBuilder.Entity("FinBotNet.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("FinBotNet.PLUS_DI", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("PLUS_DI");
                });

            modelBuilder.Entity("FinBotNet.PLUS_DM", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("PLUS_DM");
                });

            modelBuilder.Entity("FinBotNet.PPO", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("FastPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SlowPeriod")
                        .HasColumnType("int");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("matype")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("PPO");
                });

            modelBuilder.Entity("FinBotNet.ROC", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("ROC");
                });

            modelBuilder.Entity("FinBotNet.ROCR", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("ROCR");
                });

            modelBuilder.Entity("FinBotNet.RSI", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("RSI");
                });

            modelBuilder.Entity("FinBotNet.SAR", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("acceleration")
                        .HasColumnType("int");

                    b.Property<int>("maximum")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("SAR");
                });

            modelBuilder.Entity("FinBotNet.SMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("SMA");
                });

            modelBuilder.Entity("FinBotNet.STOCH", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fastkperiod")
                        .HasColumnType("int");

                    b.Property<int>("slowdmatype")
                        .HasColumnType("int");

                    b.Property<int>("slowdperiod")
                        .HasColumnType("int");

                    b.Property<int>("slowkmatype")
                        .HasColumnType("int");

                    b.Property<int>("slowkperiod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("STOCH");
                });

            modelBuilder.Entity("FinBotNet.STOCHRSI", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.Property<int>("fastdmatype")
                        .HasColumnType("int");

                    b.Property<int>("fastdperiod")
                        .HasColumnType("int");

                    b.Property<int>("fastkperiod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("STOCHRSI");
                });

            modelBuilder.Entity("FinBotNet.STOCKF", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fastdmatype")
                        .HasColumnType("int");

                    b.Property<int>("fastdperiod")
                        .HasColumnType("int");

                    b.Property<int>("fastkperiod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("STOCKF");
                });

            modelBuilder.Entity("FinBotNet.Stock", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Exchange")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("FinBotNet.StockPrice", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("TimeSpan")
                        .HasColumnType("time");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Date", "StockId");

                    b.HasIndex("StockId");

                    b.ToTable("StockPrice");
                });

            modelBuilder.Entity("FinBotNet.Strategy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Strategy");
                });

            modelBuilder.Entity("FinBotNet.T3", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("T3");
                });

            modelBuilder.Entity("FinBotNet.TEMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("TEMA");
                });

            modelBuilder.Entity("FinBotNet.TRANGE", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("TRANGE");
                });

            modelBuilder.Entity("FinBotNet.TRIMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("TRIMA");
                });

            modelBuilder.Entity("FinBotNet.TRIX", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("TRIX");
                });

            modelBuilder.Entity("FinBotNet.ULTOSC", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod1")
                        .HasColumnType("int");

                    b.Property<int>("TimePeriod2")
                        .HasColumnType("int");

                    b.Property<int>("TimePeriod3")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("ULTOSC");
                });

            modelBuilder.Entity("FinBotNet.VWAP", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("StockId");

                    b.ToTable("VWAP");
                });

            modelBuilder.Entity("FinBotNet.WILLR", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("WILLR");
                });

            modelBuilder.Entity("FinBotNet.WMA", b =>
                {
                    b.Property<decimal>("Close")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("High")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("time");

                    b.Property<decimal>("Low")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Open")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StockId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TimePeriod")
                        .HasColumnType("int");

                    b.HasIndex("StockId");

                    b.ToTable("WMA");
                });

            modelBuilder.Entity("FinBotNet.AD", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ADOSC", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ADX", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ADXR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.APO", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.AROON", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.AROONOSC", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ATR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.Agent", b =>
                {
                    b.HasOne("FinBotNet.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("FinBotNet.Strategy", "Strat")
                        .WithMany()
                        .HasForeignKey("StratId");
                });

            modelBuilder.Entity("FinBotNet.BBANDS", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.BOP", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.CCI", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.CMO", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.DEMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.DX", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.EMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.HT_DCPERIOD", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.HT_DCPHASE", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.HT_PHASOR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.HT_SINE", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.HT_TRENDLINE", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.HT_TRENDMODE", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.KAMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MACD", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MACDEXT", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MAMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MFI", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MIDPOINT", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MIDPRICE", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MINUS_DI", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MINUS_DM", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.MOM", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.NATR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.OBV", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.Order", b =>
                {
                    b.HasOne("FinBotNet.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinBotNet.PLUS_DI", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.PLUS_DM", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.PPO", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ROC", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ROCR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.RSI", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.SAR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.SMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.STOCH", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.STOCHRSI", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.STOCKF", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.StockPrice", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinBotNet.T3", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.TEMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.TRANGE", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.TRIMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.TRIX", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.ULTOSC", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.VWAP", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.WILLR", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });

            modelBuilder.Entity("FinBotNet.WMA", b =>
                {
                    b.HasOne("FinBotNet.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId");
                });
#pragma warning restore 612, 618
        }
    }
}
